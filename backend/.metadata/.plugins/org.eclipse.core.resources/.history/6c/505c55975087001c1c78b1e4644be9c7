package com.equiplano.seguro.persistence;

import java.util.List;
import java.util.Optional;
import java.util.Random;
import org.springframework.stereotype.Service;
import com.equiplano.seguro.model.Apolice;
import com.equiplano.seguro.repository.ApoliceRepository;

@Service
public class ApolicePersistence {
	private final ApoliceRepository ar;
	
	public ApolicePersistence(ApoliceRepository ar) {
		this.ar=ar;
		
	}
	
	
	
	public Long salvar(Apolice a) {
			
		if(a.getId()==null) {
			a=gerarNumero(a);
			
		return	cadastrar(a);
		}else
		return	alterar(a);
	}
	
	private Long alterar(Apolice a) {
		ar.save(a);
		return a.getNumero();
	}
	
	private Long cadastrar(Apolice a) {		
		ar.save(a);
		return a.getNumero();
	}
	
	private Apolice gerarNumero(Apolice a) {
		
		if(a.getNumero()==null) {
			Random aleatorio = new Random();
			a.setNumero(Math.abs(aleatorio.nextLong())); 
			return a;
		}else
		
		return a;
	}
	
	public boolean existeApolice(Long id) {
		return ar.existsById(id);
	}
	
	public void excluir(Long id) {
		ar.deleteById(id);
	}
	
	public int contadorApoliceCliente(Long id) {
		return ar.contadorApoliceCliente(id);
	}
	
	public Optional<Apolice> buscarPorId(Long id){
	return	ar.findById(id);
	}
	
	
	public Apolice buscarPorNumero(Long numero) {
		return ar.findByNumero(numero);
	}
	
	public int existeApoliceNumero(Long numero) {
		return ar.existeApoliceNumero(numero);
	}
	
	
	public List<Apolice>  buscarTodos(){
	return	ar.findAll();
	}

}
